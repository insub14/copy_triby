/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-10-16 02:15:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.triby.member.model.vo.Member;

public final class findIDview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.triby.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    ");


    	String findID = (String)request.getParameter("findID");
    	//String findID = (String)session.getAttribute("findID");
    
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/bootstrap.min.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/bootstrap.js\"></script>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <title>회원 아이디 찾기</title>\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("      a{\r\n");
      out.write("    color: inherit;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    font-size: 10px;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("    *{\r\n");
      out.write("\tfont-family:'Noto Sans KR';\r\n");
      out.write("\tmargin:auto;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#boundary{\r\n");
      out.write("    width: 1px;\r\n");
      out.write("    height: 10px;\r\n");
      out.write("    background-color: rgb(221, 221, 221);\r\n");
      out.write("    margin-left: 14px;\r\n");
      out.write("    margin-right: 14px;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("   .main{\r\n");
      out.write("    border:0px solid black;\r\n");
      out.write("    width: 400px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    line-height: 2;\r\n");
      out.write("   \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #find_Id{\r\n");
      out.write("        border: 0px solid black;\r\n");
      out.write("        width:30%;\r\n");
      out.write("        height: 10%;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin:auto;\r\n");
      out.write("        \r\n");
      out.write("    }\r\n");
      out.write("    #header{\r\n");
      out.write("    border: 0px solid black;\r\n");
      out.write("    height:40%;\r\n");
      out.write("    font-weight:bold;\r\n");
      out.write("    text-align:left;\r\n");
      out.write("    \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<!--<form action=\"");
      out.print(request.getContextPath() );
      out.write("/findId.me\" method=\"POST\" id=\"userfid\">  -->\r\n");
      out.write("<div id=\"header\" class=\"navbar navbar-expand-lg navbar-dark bg-primary\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/resources/images/triby_logo.png\" style=\"width:100px;\"></div>\r\n");
      out.write("  <div class=\"main\">\r\n");
      out.write(" \r\n");
      out.write("  <h2>아이디를 찾았습니다!!</h2>\r\n");
      out.write("  <h4>회원님의 아이디는 ");
      out.print(findID );
      out.write(" 입니다.</h4>\r\n");
      out.write("   <a id = \"findId\" value=\"확인\" class=\"btn btn-outline-success\" onclick=window.close() href=\"");
      out.print(request.getContextPath() );
      out.write("/loginpg.me\" target=_blank style=\"width:20%\">확인</a><br>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write(" \t<script>\r\n");
      out.write(" \t\r\n");
      out.write(" \t\tfunction login(){\r\n");
      out.write(" \t\tlocation.href=\"");
      out.print( request.getContextPath());
      out.write("/loginpg.me\"\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\tfunction findMember(){\r\n");
      out.write(" \t\t\tlocation.href =\"");
      out.print( request.getContextPath());
      out.write("/views/host/FindPwd.jsp\"\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\r\n");
      out.write(" \t</script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
